{"version":3,"sources":["component/bruno-link.js","component/button.js","component/backindex.js","module/blog-content.js","module/welcome.js","App.js","serviceWorker.js","index.js"],"names":["BrunoLink","state","someKey","to","this","props","style","fontWeight","type","className","title","text","setState","React","Component","Button","href","target","Backindex","BlogContent","data-aos","Welcome","path","exact","render","class","data-aos-delay","Swiper","fadeEffect","crossFade","autoplay","delay","effect","speed","preventInteractionOnTransition","width","window","innerWidth","AOS","init","duration","easing","once","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2ecb75bd.chunk.js","sourcesContent":["import React from 'react';\nimport '../style/_brunolink.sass';\nimport { Router, Route, Link } from 'react-router-dom'\n\nclass BrunoLink extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n    var fontWeight = '900'\n  }\n\n  render() {\n    return <Link to={this.props.to} style={{fontWeight:'600'}} type={this.props.type} className={this.props.className} title={this.props.title}>\n        {this.props.text}\n    </Link>;\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n  }\n}\n\nexport default BrunoLink;\n","import React from 'react';\nimport '../style/button.sass'\n\nclass Button extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            someKey: 'someValue'\n        };\n    }\n\n    render() {\n        return <a className=\"button-link\" href={this.props.href} target={this.props.target}>\n            <button\n            className={this.props.className}\n            style={this.props.style}\n            title={this.props.title}>\n            <span>\n                {this.props.text}\n            </span>\n        </button>\n        </a>;\n    }\n\n    componentDidMount() {\n        this.setState({\n            someKey: 'otherValue'\n        });\n    }\n}\n\nexport default Button;\n","import React from 'react';\nimport { Router , Route , NavLink } from 'react-router-dom'\nimport '../style/_backindex.sass';\n\nclass Backindex extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  render() {\n    return <NavLink to=\"/brunoink\" className=\"backindex\">Back</NavLink>;\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n  }\n}\n\nexport default Backindex;\n","import React from 'react';\nimport BackIndex from '../component/backindex'\n\nclass BlogContent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  render() {\n    return <div className=\"content\" data-aos=\"fade-up\">\n      <BackIndex></BackIndex>\n      <h1>{}</h1>\n    </div>;\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n  }\n}\n\nexport default BlogContent;\n","import React from 'react';\nimport '../style/welcome.sass'\nimport BrunoLink from '../component/bruno-link.js'\nimport Button from '../component/button.js'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport BlogContent from '../module/blog-content.js'\nimport Swiper from \"swiper\";\nimport \"swiper/css/swiper.css\";\n\nclass Welcome extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  render() {\n    return <section className=\"index-section-hero\">\n      <div className=\"hero-left\">\n        <Router>\n          <Route path='/brunoink' exact render={() => {\n            return <div className=\"content\" data-aos=\"fade-up\">\n              <h1>Hi, Here is Bruno</h1>\n              <p>I'm an UE Designer, Web Designer and Coder. <span class=\"sub\">Now be employed in a Chinese technology company. Currently manage our design system. Now learning React and Sketch Plugin Development.</span></p>\n              <div className=\"content-nav\">\n                <BrunoLink to=\"\" type=\"\" text=\"Portfolio (Coming Soon)\" className=\"text-32 disabled\" title=\"Coming Soon..\"></BrunoLink>\n                <BrunoLink to=\"/brunoink/blog\" type=\"\" text=\"Blog\" className=\"text-32\"></BrunoLink>\n                <BrunoLink to=\"/brunoink/about-me\" type=\"\" text=\"About Me\" className=\"text-32\"></BrunoLink>\n                <BrunoLink to=\"/brunoink/contact\" type=\"\" text=\"Contact\" className=\"text-32\"></BrunoLink>\n              </div>\n              <div className=\"social-media\" data-aos-delay=\"400\">\n                <Button href=\"https://www.linkedin.com/in/bruno-dai-b6173b11a/\" target=\"_blank\" className=\"tertiary-light social-media linkedin\"></Button>\n                <Button href=\"mailto:brunoming1996@qq.com\" className=\"tertiary-light social-media envelop\"></Button>\n              </div>\n            </div>\n          }} />\n          <Route path='/brunoink/blog' exact render={() => {\n            return <BlogContent></BlogContent>\n          }} />\n        </Router>\n      </div>\n      <div className=\"hero-right\">\n        <Router>\n          <Route path='/brunoink' exact render={() => {\n            return <div class=\"swiper-container\">\n              <div class=\"swiper-wrapper\">\n                <div class=\"swiper-slide slide-1\"></div>\n                <div class=\"swiper-slide slide-2\"></div>\n                <div class=\"swiper-slide slide-3\"></div>\n              </div>\n            </div>\n          }} />\n        </Router>\n      </div>\n    </section>;\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n    var swiper = new Swiper('.swiper-container', {\n      fadeEffect: {\n        crossFade: true\n      },\n      autoplay: {\n        delay: 5000,\n      },\n      effect: 'fade',\n      speed: 500,\n      preventInteractionOnTransition: true\n      // ...\n    });\n    swiper.width = window.innerWidth * 0.667\n  }\n}\n\nexport default Welcome;\n","import React from 'react';\nimport './App.sass';\nimport Welcome from './module/welcome';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport AOS from 'aos';\nimport 'aos/dist/aos.css'\n\nAOS.init({\n  duration: 800, // values from 0 to 3000, with step 50ms\n  easing: 'ease-in-out', // default easing for AOS animations\n  once: true, // whether animation should happen only once - while scrolling down\n});\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Route path='/brunoink' exact render={() => {\n          return <Welcome></Welcome>\n        }} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}