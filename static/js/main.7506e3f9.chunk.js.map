{"version":3,"sources":["component/button.js","component/bruno-link.js","component/backindex.js","module/blog-content.js","module/about-content.js","module/contact-content.js","module/welcome.js","App.js","serviceWorker.js","index.js"],"names":["Button","React","Component","state","someKey","className","href","this","props","target","style","title","text","setState","Backindex","to","BlogContent","data-aos","AboutContent","ContactContent","Welcome","show","onToggle","path","exact","render","data-aos-delay","class","type","Swiper","fadeEffect","crossFade","autoplay","delay","effect","speed","loop","width","window","innerWidth","AOS","init","once","duration","Routes","withRouter","location","component","App","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4WA+BeA,GC3BSC,IAAMC,U,wDDA1B,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,QAAS,aAHH,E,qDAQV,OAAO,uBAAGC,UAAU,cAAcC,KAAMC,KAAKC,MAAMF,KAAMG,OAAQF,KAAKC,MAAMC,QACxE,4BACAJ,UAAWE,KAAKC,MAAMH,UACtBK,MAAOH,KAAKC,MAAME,MAClBC,MAAOJ,KAAKC,MAAMG,OAClB,8BACKJ,KAAKC,MAAMI,U,0CAOpBL,KAAKM,SAAS,CACVT,QAAS,mB,GAvBAH,IAAMC,Y,OEoBZY,G,wDAlBb,aAAe,IAAD,8BACZ,gBACKX,MAAQ,CACXC,QAAS,aAHC,E,qDAQZ,OAAO,kBAAC,IAAD,CAASW,GAAG,YAAYV,UAAU,aAAlC,U,0CAIPE,KAAKM,SAAS,CACZT,QAAS,mB,GAdSH,IAAMC,YCqBfc,E,kDArBb,aAAe,IAAD,8BACZ,gBACKb,MAAQ,CACXC,QAAS,aAHC,E,qDAQZ,OAAO,yBAAKC,UAAU,UAAUY,WAAS,WACvC,kBAAC,EAAD,MACA,uC,0CAKFV,KAAKM,SAAS,CACZT,QAAS,mB,GAjBWH,IAAMC,WCsBjBgB,E,kDArBb,aAAe,IAAD,8BACZ,gBACKf,MAAQ,CACXC,QAAS,aAHC,E,qDAQZ,OAAO,yBAAKC,UAAU,WACpB,kBAAC,EAAD,MACA,2C,0CAKFE,KAAKM,SAAS,CACZT,QAAS,mB,GAjBYH,IAAMC,WCsBlBiB,E,kDArBb,aAAe,IAAD,8BACZ,gBACKhB,MAAQ,CACXC,QAAS,aAHC,E,qDAQZ,OAAO,yBAAKC,UAAU,WACpB,kBAAC,EAAD,MACA,0C,0CAKFE,KAAKM,SAAS,CACZT,QAAS,mB,GAjBcH,IAAMC,W,QC0FpBkB,G,wDAhFb,aAAe,IAAD,8BACZ,gBAMFjB,MAAQ,CAAEkB,MAAM,GAPF,EASdC,SAAW,kBAAM,EAAKT,SAAS,CAAEQ,MAAO,EAAKlB,MAAMkB,QAPjD,EAAKlB,MAAQ,CACXC,QAAS,aAHC,E,qDAWKG,KAAKJ,MAAdkB,KACR,OAAO,6BAAShB,UAAU,sBACxB,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkB,KAAK,YAAYC,OAAK,EAACC,OAAQ,WACpC,OAAO,yBAAKpB,UAAU,WACpB,wBAAIY,WAAS,UAAUS,iBAAe,KAAtC,qBACA,uBAAGT,WAAS,UAAUS,iBAAe,OAArC,+CAAuF,0BAAMC,MAAM,OAAZ,2IACvF,yBAAKtB,UAAU,eACb,kBAAC,IAAD,CAAMY,WAAS,UAAUS,iBAAe,MAAMX,GAAG,GAAGa,KAAK,GAAGhB,KAAK,0BAA0BP,UAAU,mBAAmBM,MAAM,iBAA9H,2BACA,kBAAC,IAAD,CAAMM,WAAS,UAAUS,iBAAe,MAAMX,GAAG,iBAAiBa,KAAK,GAAGhB,KAAK,OAAOP,UAAU,WAAhG,QACA,kBAAC,IAAD,CAAMY,WAAS,UAAUS,iBAAe,MAAMX,GAAG,qBAAqBa,KAAK,GAAGhB,KAAK,WAAWP,UAAU,WAAxG,aAEF,yBAAKA,UAAU,eAAeY,WAAS,UAAUS,iBAAe,OAC9D,kBAAC,EAAD,CAAQpB,KAAK,mDAAmDG,OAAO,SAASJ,UAAU,yCAC1F,kBAAC,EAAD,CAAQC,KAAK,8BAA8BD,UAAU,6CAI3D,kBAAC,IAAD,CAAOkB,KAAK,iBAAiBC,OAAK,EAACC,OAAQ,WACzC,OAAO,kBAAC,EAAD,SAET,kBAAC,IAAD,CAAOF,KAAK,qBAAqBC,OAAK,EAACC,OAAQ,WAC7C,OAAO,kBAAC,EAAD,SAET,kBAAC,IAAD,CAAOF,KAAK,oBAAoBC,OAAK,EAACC,OAAQ,WAC5C,OAAO,kBAAC,EAAD,WAIb,yBAAKpB,UAAU,cACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkB,KAAK,IAAIC,OAAK,EAACC,OAAQ,WAC5B,OAAO,yBAAKE,MAAM,oBAChB,yBAAKA,MAAM,kBACT,yBAAKA,MAAM,yBAEX,yBAAKA,MAAM,yBAEX,yBAAKA,MAAM,mC,0CAWvBpB,KAAKM,SAAS,CACZT,QAAS,eAEE,IAAIyB,IAAO,oBAAqB,CAC3CC,WAAY,CACVC,WAAW,GAEbC,SAAU,CACRC,MAAO,KAETC,OAAQ,OACRC,MAAO,IACPC,MAAM,IAGDC,MAA4B,KAApBC,OAAOC,e,GA7EJtC,IAAMC,Y,+BCW5BsC,IAAIC,KAAK,CACPC,MAAM,EACNC,SAAU,MAGZ,IAAMC,EAASC,aAAW,gBAAEC,EAAF,EAAEA,SAAF,OAClB,kBAAC,IAAD,CAAQA,SAAUA,GAChB,kBAAC,IAAD,CAAOtB,OAAK,EAACD,KAAM,aAAcwB,UAAW3B,IAC5C,kBAAC,IAAD,CAAOI,OAAK,EAACD,KAAM,iBAAkBwB,UAAW3B,IAChD,kBAAC,IAAD,CAAOI,OAAK,EAACD,KAAM,qBAAsBwB,UAAW3B,QAIzC4B,E,4MACnB7C,MAAQ,CAACkB,MAAM,G,EACfC,SAAW,kBAAM,EAAKT,SAAS,CAACQ,MAAO,EAAKlB,MAAMkB,Q,uDAEjCd,KAAKJ,MAAbkB,KACP,OACE,kBAAC,IAAD,KACE,kBAACuB,EAAD,W,GAPyB3C,IAAMC,WCxBnB+C,QACW,cAA7BX,OAAOQ,SAASI,UAEe,UAA7BZ,OAAOQ,SAASI,UAEhBZ,OAAOQ,SAASI,SAASC,MACvB,2DCXNC,IAAS3B,OACP,kBAAC,IAAM4B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7506e3f9.chunk.js","sourcesContent":["import React from 'react';\nimport '../style/button.sass'\n\nclass Button extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            someKey: 'someValue'\n        };\n    }\n\n    render() {\n        return <a className=\"button-link\" href={this.props.href} target={this.props.target}>\n            <button\n            className={this.props.className}\n            style={this.props.style}\n            title={this.props.title}>\n            <span>\n                {this.props.text}\n            </span>\n        </button>\n        </a>;\n    }\n\n    componentDidMount() {\n        this.setState({\n            someKey: 'otherValue'\n        });\n    }\n}\n\nexport default Button;\n","import React from 'react';\nimport '../style/_brunolink.sass';\nimport { Router, Route, Link } from 'react-router-dom'\n\nclass BrunoLink extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n    var fontWeight = '900'\n  }\n\n  render() {\n    return <Link onClick={this.onToggle} to={this.props.to} style={{fontWeight:'600'}} type={this.props.type} className={this.props.className} title={this.props.title}>\n        {this.props.text}\n    </Link>;\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n  }\n}\n\nexport default BrunoLink;\n","import React from 'react';\nimport { Router , Route , NavLink } from 'react-router-dom'\nimport '../style/_backindex.sass';\n\nclass Backindex extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  render() {\n    return <NavLink to=\"/brunoink\" className=\"backindex\">Back</NavLink>;\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n  }\n}\n\nexport default Backindex;\n","import React from 'react';\nimport BackIndex from '../component/backindex'\n\nclass BlogContent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  render() {\n    return <div className=\"content\" data-aos=\"fade-in\">\n      <BackIndex></BackIndex>\n      <h1>Blog</h1>\n    </div>;\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n  }\n}\n\nexport default BlogContent;\n","import React from 'react';\nimport BackIndex from '../component/backindex'\n\nclass AboutContent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  render() {\n    return <div className=\"content\">\n      <BackIndex></BackIndex>\n      <h1>About Me</h1>\n    </div>;\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n  }\n}\n\nexport default AboutContent;\n","import React from 'react';\nimport BackIndex from '../component/backindex'\n\nclass ContactContent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  render() {\n    return <div className=\"content\">\n      <BackIndex></BackIndex>\n      <h1>Contact</h1>\n    </div>;\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n  }\n}\n\nexport default ContactContent;\n","import React from 'react';\nimport '../style/welcome.sass'\nimport BrunoLink from '../component/bruno-link.js'\nimport Button from '../component/button.js'\nimport { BrowserRouter as Router, Route, Link, Switch, withRouter } from \"react-router-dom\";\nimport BlogContent from '../module/blog-content.js'\nimport AboutContent from '../module/about-content.js'\nimport ContactContent from '../module/contact-content.js'\nimport Swiper from \"swiper\";\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport \"swiper/css/swiper.css\";\n\nclass Welcome extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  state = { show: true };\n\n  onToggle = () => this.setState({ show: !this.state.show });\n  render() {\n    const { show } = this.state;\n    return <section className=\"index-section-hero\">\n      <div className=\"hero-left\">\n        <Router>\n          <Route path='/brunoink' exact render={() => {\n            return <div className=\"content\">\n              <h1 data-aos=\"fade-in\" data-aos-delay=\"0\">Hi, Here is Bruno</h1>\n              <p data-aos=\"fade-in\" data-aos-delay=\"100\">I'm an UE Designer, Web Designer and Coder. <span class=\"sub\">Now be employed in a Chinese technology company. Currently manage our design system. Now learning React and Sketch Plugin Development.</span></p>\n              <div className=\"content-nav\">\n                <Link data-aos=\"fade-in\" data-aos-delay=\"200\" to=\"\" type=\"\" text=\"Portfolio (Coming Soon)\" className=\"text-32 disabled\" title=\"Coming Soon..\">Portfolio (Coming Soon)</Link>\n                <Link data-aos=\"fade-in\" data-aos-delay=\"250\" to=\"/brunoink/blog\" type=\"\" text=\"Blog\" className=\"text-32\">Blog</Link>\n                <Link data-aos=\"fade-in\" data-aos-delay=\"300\" to=\"/brunoink/about-me\" type=\"\" text=\"About Me\" className=\"text-32\">About Me</Link>\n              </div>\n              <div className=\"social-media\" data-aos=\"fade-in\" data-aos-delay=\"400\">\n                <Button href=\"https://www.linkedin.com/in/bruno-dai-b6173b11a/\" target=\"_blank\" className=\"tertiary-light social-media linkedin\"></Button>\n                <Button href=\"mailto:brunoming1996@qq.com\" className=\"tertiary-light social-media envelop\"></Button>\n              </div>\n            </div>\n          }} />\n          <Route path='/brunoink/blog' exact render={() => {\n            return <BlogContent></BlogContent>\n          }} />\n          <Route path='/brunoink/about-me' exact render={() => {\n            return <AboutContent></AboutContent>\n          }} />\n          <Route path='/brunoink/contact' exact render={() => {\n            return <ContactContent></ContactContent>\n          }} />\n        </Router>\n      </div>\n      <div className=\"hero-right\">\n        <Router>\n          <Route path='*' exact render={() => {\n            return <div class=\"swiper-container\">\n              <div class=\"swiper-wrapper\">\n                <div class=\"swiper-slide slide-1\">\n                </div>\n                <div class=\"swiper-slide slide-2\">\n                </div>\n                <div class=\"swiper-slide slide-3\">\n                </div>\n              </div>\n            </div>\n          }} />\n        </Router>\n      </div>\n    </section>;\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n    var swiper = new Swiper('.swiper-container', {\n      fadeEffect: {\n        crossFade: true\n      },\n      autoplay: {\n        delay: 8000,\n      },\n      effect: 'fade',\n      speed: 1000,\n      loop: true,\n      // ...\n    });\n    swiper.width = window.innerWidth * 0.667\n  }\n}\n\nexport default Welcome;\n","import React from 'react';\nimport './App.sass'\nimport BrunoLink from './component/bruno-link.js'\nimport Button from './component/button.js'\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useLocation,\n  useParams,\n  withRouter\n} from \"react-router-dom\";\nimport Welcome from './module/welcome.js'\nimport BlogContent from './module/blog-content.js'\nimport AboutContent from './module/about-content.js'\nimport ContactContent from './module/contact-content.js'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport \"swiper/css/swiper.css\";\nimport AOS from 'aos'\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true,\n  duration: 800,\n});\n\nconst Routes = withRouter(({location}) => (\n        <Switch location={location}>\n          <Route exact path={'/brunoink/'} component={Welcome}/>\n          <Route exact path={'/brunoink/blog'} component={Welcome}/>\n          <Route exact path={'/brunoink/about-me'} component={Welcome}/>\n        </Switch>\n));\n\nexport default class App extends React.Component {\n  state = {show: true};\n  onToggle = () => this.setState({show: !this.state.show});\n  render() {\n    const {show} = this.state;\n    return (\n      <BrowserRouter>\n        <Routes></Routes>\n      </BrowserRouter>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport Welcome from './module/welcome.js';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}